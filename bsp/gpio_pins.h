/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : gpio_pins.h
**     Project     : TWR-K64F120M
**     Processor   : MK64FN1M0VMD12
**     Component   : fsl_gpio
**     Version     : Component 1.3.0, Driver 01.00, CPU db: 3.00.000
**     Repository  : KSDK 1.3.0
**     Compiler    : GNU C Compiler
**
**     Copyright : 1997 - 2015 Freescale Semiconductor, Inc.
**     All Rights Reserved.
**
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file gpio_pins.h
** @version 01.00
*/
/*!
**  @addtogroup gpio_pins_module gpio_pins module documentation
**  @{
*/

#ifndef __gpio_pins_H
#define __gpio_pins_H

/* MODULE gpio_pins. */

/* Include inherited beans */
#include "fsl_gpio_driver.h"

/*! @brief Configuration structure 3 for input pins */
extern const gpio_input_pin_user_config_t sdhcCdPin[];

extern const gpio_input_pin_user_config_t DigitalInputPin[];

extern const gpio_output_pin_user_config_t DigitalOutputPin[];

extern const gpio_output_pin_user_config_t SelectAnalogPin[];

extern const gpio_input_pin_user_config_t sdcardCardDectionPin[];

/*! @brief Pin names */
enum _gpio_pins_pinNames {
	kGpioSdhc0Cd                = GPIO_MAKE_PIN(GPIOD_IDX, 6U),
	kGpioMbRs485                = GPIO_MAKE_PIN(GPIOC_IDX, 2U),

	DigitalInput0				= GPIO_MAKE_PIN(GPIOB_IDX, 19U),
	DigitalInput1				= GPIO_MAKE_PIN(GPIOB_IDX, 18U),
	DigitalInput2				= GPIO_MAKE_PIN(GPIOB_IDX, 8U),
	DigitalInput3				= GPIO_MAKE_PIN(GPIOB_IDX, 7U),
	DigitalInput4				= GPIO_MAKE_PIN(GPIOB_IDX, 6U),
	DigitalInput5				= GPIO_MAKE_PIN(GPIOB_IDX, 5U),
	DigitalInput6				= GPIO_MAKE_PIN(GPIOB_IDX, 4U),
	DigitalInput7				= GPIO_MAKE_PIN(GPIOB_IDX, 3U),

	DigitalOutput0				= GPIO_MAKE_PIN(GPIOC_IDX, 1U),
	DigitalOutput1				= GPIO_MAKE_PIN(GPIOC_IDX, 0U),
	DigitalOutput2				= GPIO_MAKE_PIN(GPIOB_IDX, 23U),
	DigitalOutput3				= GPIO_MAKE_PIN(GPIOB_IDX, 22U),
	DigitalOutput4				= GPIO_MAKE_PIN(GPIOB_IDX, 21U),
	DigitalOutput5				= GPIO_MAKE_PIN(GPIOB_IDX, 20U),

	SelectAnalog0				= GPIO_MAKE_PIN(GPIOC_IDX, 19U),
	SelectAnalog1				= GPIO_MAKE_PIN(GPIOD_IDX, 1U),
	SelectAnalog2				= GPIO_MAKE_PIN(GPIOC_IDX, 13U),
	SelectAnalog3				= GPIO_MAKE_PIN(GPIOC_IDX, 18U),

	SelectTrigger0				= GPIO_MAKE_PIN(GPIOC_IDX, 7U),
	SelectTrigger1				= GPIO_MAKE_PIN(GPIOC_IDX, 6U),
	SelectTrigger2				= GPIO_MAKE_PIN(GPIOC_IDX, 9U),
	SelectTrigger3				= GPIO_MAKE_PIN(GPIOC_IDX, 12U),

	TriggerAnalog				= GPIO_MAKE_PIN(GPIOC_IDX, 8U),
	RefCurrEn					= GPIO_MAKE_PIN(GPIOD_IDX, 3U),
	RefCurrEf					= GPIO_MAKE_PIN(GPIOD_IDX, 4U),
	EpromWp						= GPIO_MAKE_PIN(GPIOC_IDX, 5U),

	WatchDogFeed				= GPIO_MAKE_PIN(GPIOA_IDX, 24U),
	LcdVccOcf					= GPIO_MAKE_PIN(GPIOA_IDX, 25U),
	LcdVccEn					= GPIO_MAKE_PIN(GPIOD_IDX, 7U),
	LcdGpio1					= GPIO_MAKE_PIN(GPIOA_IDX, 27U),
	LcdGpio2					= GPIO_MAKE_PIN(GPIOA_IDX, 26U),
	LanPsuOcp					= GPIO_MAKE_PIN(GPIOA_IDX, 28U),
	LanPsuEn					= GPIO_MAKE_PIN(GPIOE_IDX, 12U),
	IoVccEn						= GPIO_MAKE_PIN(GPIOA_IDX, 29U),
	IoVccOcf					= GPIO_MAKE_PIN(GPIOB_IDX, 2U),
	ModbusPsuOcp				= GPIO_MAKE_PIN(GPIOB_IDX, 16U),
	ModbusPsuEn					= GPIO_MAKE_PIN(GPIOB_IDX, 17U),
	SimVccEn					= GPIO_MAKE_PIN(GPIOA_IDX, 6U),


//	LanPsuOcp					= GPIO_MAKE_PIN(GPIOA_IDX, 16U),
//	LanPsuEn					= GPIO_MAKE_PIN(GPIOE_IDX, 17U),
//	IoVccEn						= GPIO_MAKE_PIN(GPIOA_IDX, 15U),
//	IoVccOcf					= GPIO_MAKE_PIN(GPIOA_IDX, 14),
//	ModbusPsuOcp				= GPIO_MAKE_PIN(GPIOA_IDX, 5U),
//	ModbusPsuEn					= GPIO_MAKE_PIN(GPIOA_IDX, 12U),
//	LcdGpio2					= GPIO_MAKE_PIN(GPIOA_IDX, 13U),
};



#endif

/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/


